<%


var token = request.getParameter('token');
var host = request.getParameter('host');
var action = request.getParameter('action');
/*var usrName = request.getHeader("username");
var pass = request.getHeader("password");
*/

//for testing


var usrName = request.getParameter('username');
var pass = request.getParameter('password');


var log = new Log();
var login = require("login");
var permission = require("permission");
var mylogin;
log.info(action);
var key1;
var key2;

function invokelogin() {
	mylogin = new login.login(usrName, pass, host);
	key1 = mylogin.sessionId;
	log.info(session.get('key1'));
	session.put('key1', key1)
	log.info("login................");
	log.info(key1);
	return mylogin;
}

function invokelogout() {
	mylogin = new login.logout(session.get('key1'));
	log.info("key1" +session.get('key1'));	
	return mylogin;
	
}


function invokeRole() {
	var ke = session.get('key1');
	log.info(ke)
		permission.urlWs = "https://localhost:9443/admin/services/UserAdmin/";

	var xmylogin = new permission.listUsers(ke);
	log.info(xmylogin);	
	return xmylogin;
	
}

function invokeError(msg) {
	log.info(msg)
	return {
		"error" : true,
		"errorMsg" : msg
	};
}

switch(action) {
	case "login":
		if(usrName != null && pass != null) {
			print(invokelogin());
		} else {
			log.info("eror login");
			print(invokeError("please add userName and password"));
		}
		break;
	case "logout":
		print(invokelogout());
		break;
	case "isLogin":
		print(invokeisLogin());
		break;
	case "role":
		print(invokeRole());
		break;
	default:
		print(invokeError("action not define"));
}


%>